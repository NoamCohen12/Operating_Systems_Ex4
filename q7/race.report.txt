==216411== Helgrind, a thread error detector
==216411== Copyright (C) 2007-2017, and GNU GPL'd, by OpenWorks LLP et al.
==216411== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==216411== Command: ./race
==216411== 
==216411== ---Thread-Announcement------------------------------------------
==216411== 
==216411== Thread #4 was created
==216411==    at 0x498D9F3: clone (clone.S:76)
==216411==    by 0x498E8EE: __clone_internal (clone-internal.c:83)
==216411==    by 0x48FC6D8: create_thread (pthread_create.c:295)
==216411==    by 0x48FD1FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==216411==    by 0x4853767: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==216411==    by 0x1092C3: main (race.cpp:19)
==216411== 
==216411== ---Thread-Announcement------------------------------------------
==216411== 
==216411== Thread #3 was created
==216411==    at 0x498D9F3: clone (clone.S:76)
==216411==    by 0x498E8EE: __clone_internal (clone-internal.c:83)
==216411==    by 0x48FC6D8: create_thread (pthread_create.c:295)
==216411==    by 0x48FD1FF: pthread_create@@GLIBC_2.34 (pthread_create.c:828)
==216411==    by 0x4853767: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==216411==    by 0x1092C3: main (race.cpp:19)
==216411== 
==216411== ----------------------------------------------------------------
==216411== 
==216411== Possible data race during read of size 8 at 0x10C018 by thread #4
==216411== Locks held: none
==216411==    at 0x10920B: square(void*) (race.cpp:9)
==216411==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==216411==    by 0x48FCAC2: start_thread (pthread_create.c:442)
==216411==    by 0x498DA03: clone (clone.S:100)
==216411== 
==216411== This conflicts with a previous write of size 8 by thread #3
==216411== Locks held: none
==216411==    at 0x109215: square(void*) (race.cpp:9)
==216411==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==216411==    by 0x48FCAC2: start_thread (pthread_create.c:442)
==216411==    by 0x498DA03: clone (clone.S:100)
==216411==  Address 0x10c018 is 0 bytes inside data symbol "accum"
==216411== 
==216411== ----------------------------------------------------------------
==216411== 
==216411== Possible data race during write of size 8 at 0x10C018 by thread #4
==216411== Locks held: none
==216411==    at 0x109215: square(void*) (race.cpp:9)
==216411==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==216411==    by 0x48FCAC2: start_thread (pthread_create.c:442)
==216411==    by 0x498DA03: clone (clone.S:100)
==216411== 
==216411== This conflicts with a previous write of size 8 by thread #3
==216411== Locks held: none
==216411==    at 0x109215: square(void*) (race.cpp:9)
==216411==    by 0x485396A: ??? (in /usr/libexec/valgrind/vgpreload_helgrind-amd64-linux.so)
==216411==    by 0x48FCAC2: start_thread (pthread_create.c:442)
==216411==    by 0x498DA03: clone (clone.S:100)
==216411==  Address 0x10c018 is 0 bytes inside data symbol "accum"
==216411== 
2870
==216411== 
==216411== Use --history-level=approx or =none to gain increased speed, at
==216411== the cost of reduced accuracy of conflicting-access information
==216411== For lists of detected and suppressed errors, rerun with: -s
==216411== ERROR SUMMARY: 36 errors from 2 contexts (suppressed: 344 from 20)
